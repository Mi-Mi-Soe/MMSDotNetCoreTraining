@{
    ApexChartResponseModel miscChart = ViewBag.miscChart;
}
<div id="chart"></div>
@section scripts{
    <script>
        //let _series = @Html.Raw(JsonConvert.SerializeObject(miscChart));
       // let _labels = @Html.Raw(JsonConvert.SerializeObject(miscChart));
        var options = {
            series: _series,
            chart: {
                height: 310,
                type: 'line',
                stacked: false,
            },
            stroke: {
                width: [0, 2, 5],
                curve: 'smooth'
            },
            plotOptions: {
                bar: {
                    columnWidth: '50%'
                }
            },
            fill: {
                opacity: [0.85, 0.25, 1],
                gradient: {
                    inverseColors: false,
                    shade: 'light',
                    type: "vertical",
                    opacityFrom: 0.85,
                    opacityTo: 0.55,
                    stops: [0, 100, 100, 100]
                }
            },
            labels:_labels ,
            markers: {
                size: 0
            },
            xaxis: {
                type: 'datetime'
            },
            yaxis: {
                title: {
                    text: 'Points',
                },
                min: 0
            },
            legend: {
                show: false
            },
            tooltip: {
                shared: true,
                intersect: false,
                y: {
                    formatter: function (y) {
                        if (typeof y !== "undefined") {
                            return y.toFixed(0) + " points";
                        }
                        return y;
                    }
                }
            }
        };

        var chart = new ApexCharts(document.querySelector("#chart"), options);
        chart.render();

        // check if the checkbox has any unchecked item
        checkLegends()

        function checkLegends() {
            var allLegends = document.querySelectorAll(".legend input[type='checkbox']")

            for (var i = 0; i < allLegends.length; i++) {
                if (!allLegends[i].checked) {
                    chart.toggleSeries(allLegends[i].value)
                }
            }
        }

        // toggleSeries accepts a single argument which should match the series name you're trying to toggle
        function toggleSeries(checkbox) {
            chart.toggleSeries(checkbox.value)
        }

    </script>
}
